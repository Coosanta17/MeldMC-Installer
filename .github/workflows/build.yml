name: Build MeldMC-Installer

on:
  pull_request:
    branches: [master, main]
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            cmake \
            ninja-build \
            pkg-config \
            libfltk1.3-dev \
            libcurl4-openssl-dev \
            libtinyxml2-dev \
            nlohmann-json3-dev \
            libssl-dev \
            libcrypto++-dev

      - name: Configure CMake
        run: cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release

      - name: Strip binary
        run: strip --strip-unneeded build/MeldInstaller

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MeldInstaller-linux-x64
          path: build/MeldInstaller

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          # Install vcpkg and dependencies
          git clone https://github.com/Microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg install curl[openssl] nlohmann-json tinyxml2 fltk

      - name: Configure CMake
        run: |
          cmake -B build -G Ninja `
            -DCMAKE_BUILD_TYPE=Release `
            -DCMAKE_TOOLCHAIN_FILE="vcpkg/scripts/buildsystems/vcpkg.cmake"

      - name: Build
        run: cmake --build build --config Release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MeldInstaller-windows-x64
          path: build/Release/MeldInstaller.exe

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install fltk curl tinyxml2 nlohmann-json openssl

      - name: Configure CMake
        run: |
          cmake -B build -G Ninja \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch == 'arm64' && 'arm64' || 'x86_64' }}

      - name: Build
        run: cmake --build build --config Release

      - name: Strip binary
        run: strip -S build/MeldInstaller

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MeldInstaller-macos-${{ matrix.arch }}
          path: build/MeldInstaller

  release:
    if: github.event_name == 'release'
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create release archives
        run: |
          cd artifacts
          for file in *; do
            if [[ "$file" == *"windows"* ]]; then
              zip -r "$file.zip" "$file"
            else
              tar -czf "$file.tar.gz" "$file"
            fi
          done

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.{zip,tar.gz}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}